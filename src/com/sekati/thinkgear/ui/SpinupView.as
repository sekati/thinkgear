/** * com.sekati.thinkgear.ui.SpinupView * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2010  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package com.sekati.thinkgear.ui {	import sekati.converters.BoolConverter;	import sekati.core.App;	import sekati.events.StageEvent;	import sekati.ui.CirclePreloader;	import sekati.utils.AlignUtil;	import sekati.views.AbstractLiquidView;		import flash.events.Event;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;			/**	 * SpinupView provides a simple spin-up screen during application initialization.	 */	final public class SpinupView extends AbstractLiquidView {		/*** @private */		private var loader : CirclePreloader;		/*** @private */		private var tf : TextField;				/*** @private */		private var caption : String;				/**		 * SpinupView Constructor		 */		public function SpinupView(caption : String) {			this.caption = caption;			super( );		}		/**		 * @inheritDoc		 */		override protected function configUI() : void {			var conf : XMLList = App.db.config.custom.thinkgear.spinup;			loader = new CirclePreloader( conf.spinner.amount, conf.spinner.radius, conf.spinner.size, conf.spinner.colors.split( ',' ) );									tf = new TextField( );			var fmt : TextFormat = new TextFormat( );			fmt.font = conf.copy.font;			fmt.bold = BoolConverter.toBoolean( conf.copy.bold );			fmt.size = conf.copy.size;			tf.textColor = conf.copy.color;			tf.alpha = conf.copy.alpha;			tf.autoSize = TextFieldAutoSize.LEFT;			tf.selectable = false;			tf.htmlText = caption;			tf.setTextFormat( fmt );									addChild( tf );			resize( );		}		/**		 * @inheritDoc		 */		override protected function onStage(e : Event = null) : void {			resize( );			loader.start( );			addChild( loader );			super.onStage( e );		}		/**		 * @inheritDoc		 */		override protected function offStage(e : Event = null) : void {			super.offStage( e );			loader.stop( );			removeChild( loader );			loader.destroy( );			loader = null;			destroy( );		}		/**		 * @inheritDoc		 */		override protected function resize(e : StageEvent = null) : void {			AlignUtil.stageAlignCenter( loader );			tf.y = loader.y + loader.height + 5;			tf.x = loader.x + (loader.width / 2) - ((tf.textWidth / 2) + (loader.width / 2));		}	}}