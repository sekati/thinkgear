/** * com.sekati.thinkgear.data.ESenseData * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2010  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php *  * Derrivative of kannopy thinkgear api. */package com.sekati.thinkgear.data {	/**	 * ESenseData is a Data object that encapsulates eSense data being captured from the ThinkGear BCI.	 */	final public class ESenseData {		/**		 * Current attention level being captured by the ThinkGear BCI.		 * 		 * <p>The interpreted meditation level (a value between 0 and 100, 		 * where 100 indicates high meditation).</p>		 */		public var attention : int;		/**		 * Current meditation level being captured by the ThinkGear BCI.		 * 		 * <p>The interpreted attention level (a value between 0 and 100, 		 * where 100 indicates high attention).</p>		 */		public var meditation : int;		/**		 * ESenseData Constructor		 */		public function ESenseData() {			super( );		}		/**		 * String representation of all current eSense data.		 */		public function toString() : String {			return "attention: " + attention + ", " + "meditation: " + meditation;		}				/**		 * Check whether the headset is off the head. This simply interprets the headset		 * data, and checks to see whether both <code>attention</code> and <code>meditation</code>		 * are <code>0</code>.		 * 		 * @return <code>true</code> if the headset is detected to be off the head, <code>false</code> otherwise.		 */		public function get isOffHead() : Boolean {			return (attention == 0 && meditation == 0);		}				}}