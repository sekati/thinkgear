/** * com.sekati.thinkgear.events.EEGPowersEvent * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2010  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php *  * Derrivative of kannopy thinkgear api. */package com.sekati.thinkgear.events {	import com.sekati.thinkgear.data.EEGPowers;		import flash.events.Event;			/**	 * EEGPowersEvent dispatched when EEG Power data is captured by the ThinkGear BCI.	 */	final public class EEGPowersEvent extends Event {		/**		 * @eventType com.sekati.thinkgear.events.EEGPowersEvent.eegPowersData		 */		public static const EEG_POWERS_DATA : String = "com.sekati.thinkgear.events.EEGPowersEvent.eegPowersData";		/*** @private */		private var _eegPowers : EEGPowers;		/**		 * EEGPowersEvent Constructor		 */		public function EEGPowersEvent(data : EEGPowers, type : String = EEG_POWERS_DATA, bubbles : Boolean = false, cancelable : Boolean = false) {			super( type, bubbles, cancelable );			_eegPowers = data;		}		/**		 * @inheritDoc		 */		override public function clone() : Event {			return new EEGPowersEvent( eegPowers );		}		/**		 * EEG Powers data object updated with data captured by the ThinkGear BCI.		 */		public function get eegPowers() : EEGPowers {			return _eegPowers;		}		/*** @private */		public function set eegPowers(eegPowers : EEGPowers) : void {			_eegPowers = eegPowers;		}	}}