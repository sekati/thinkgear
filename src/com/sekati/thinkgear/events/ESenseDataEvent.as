/** * com.sekati.thinkgear.events.ESenseDataEvent * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2010  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php *  * Derrivative of kannopy thinkgear api. */package com.sekati.thinkgear.events {	import com.sekati.thinkgear.data.ESenseData;		import flash.events.Event;		/**	 * ESenseDataEvent dispatched when eSense data is captured by the ThinkGear BCI.	 */	final public class ESenseDataEvent extends Event {		/**		 * @eventType com.sekati.thinkgear.events.ESenseDataEvent.eSenseData		 */				public static const ESENSE_DATA : String = "com.sekati.thinkgear.events.ESenseDataEvent.eSenseData";				/*** @private */		private var _eSenseData : ESenseData;		/**		 * ESenseDataEvent Constructor		 */		public function ESenseDataEvent(data : ESenseData, type : String = ESENSE_DATA, bubbles : Boolean = false, cancelable : Boolean = false) {			super( type, bubbles, cancelable );			_eSenseData = data;		}		/**		 * @inheritDoc		 */		override public function clone() : Event {			return new ESenseDataEvent( eSenseData );		}		/**		 * The ESenseData object.		 */		public function get eSenseData() : ESenseData {			return _eSenseData;		}		/*** @private */		public function set eSenseData(eSenseData : ESenseData) : void {			_eSenseData = eSenseData;		}	}}