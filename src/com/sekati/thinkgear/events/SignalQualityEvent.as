/** * com.sekati.thinkgear.events.SignalQualityEvent * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2010  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php *  * Derrivative of kannopy thinkgear api. */package com.sekati.thinkgear.events {	import com.sekati.thinkgear.data.SignalQuality;		import flash.events.Event;			/**	 * SignalQualityEvent dispatched when signal quality data is captured by the ThinkGear BCI.	 */	final public class SignalQualityEvent extends Event {		/**		 * @eventType com.sekati.thinkgear.events.SignalQualityEvent.signalQualityData		 */		public static const SIGNAL_QUALITY_DATA : String = "com.sekati.thinkgear.events.SignalQualityEvent.signalQualityData";				/*** @private */		private var _signalQuality : SignalQuality;		/**		 * SignalQualityEvent Constructor		 */		public function SignalQualityEvent(data : SignalQuality, type : String = SIGNAL_QUALITY_DATA, bubbles : Boolean = false, cancelable : Boolean = false) {			super( type, bubbles, cancelable );			signalQuality = data;		}		/**		 * @inheritDoc		 */		override public function clone() : Event {			return new SignalQualityEvent( signalQuality );		}		/**		 * Signal quality data object updated with data captured by the ThinkGear BCI.		 */		public function get signalQuality() : SignalQuality {			return _signalQuality;		}		/*** @private */				public function set signalQuality(signalQuality : SignalQuality) : void {			_signalQuality = signalQuality;		}	}}